Arrays & Strings
--------------------
1.Two Sum (Easy) - LeetCode #1

=>
let numsInput = prompt("Enter the nums:"); // e.g. [2,7,11,15]
let target = parseInt(prompt("Enter the target value:")); // e.g. 9


// let numsInput = prompt("Enter the nums");//1,2,3
// let target = prompt("Enter the target value:");

// let nums = numsInput.split(',').map(Number);



let nums = numsInput.replace('[', '').replace(']', '').split(',').map(Number);

function twoSumSimple(nums, target) {
    for (let i = 0; i < nums.length; i++) {
        console.log("nums[i]",nums[i])
        for (let j = i + 1; j < nums.length; j++) {
            console.log("nums[jj",nums[j])
            if (nums[i] + nums[j] === target) {
                return [i, j];
            }
        }
    }
    return null; 
}

let result = twoSumSimple(nums, target);

if (result) {
    console.log("Indices found:", result);
} else {
    console.log("No two numbers found that sum up to the target.");
}


2.Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k. 
 Example: Input: nums = [1,1,1], k = 2 Output: 2 Explanation: The subarrays [1,1] and [1,1] sum to 2.

let numsInput = prompt("Enter the nums:"); // e.g. [2,7,11,15]
let k = parseInt(prompt("Enter the target value:")); // e.g. 9
let nums = numsInput.replace('[', '').replace(']', '').split(',').map(Number);
console.log("Parsed array::",nums)

function checkSum(nums, k) {
    let count = 0;
    
    for (let i = 0; i < nums.length; i++) {
        let sum = 0;
        
        for (let j = i; j < nums.length; j++) {
            sum += nums[j];  
            
            if (sum === k) {
                count++;
            }
        }
    }
    
    return count;
}

let result = checkSum(nums, k);  
console.log("Number of subarrays whose sum equals to", k, "is:", result);


----------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. Write a function that takes a string as input and returns the longest substring without repeating characters.
Input: "abcabcbb"
Output: "abc"

Input: "bbbbb"
Output: "b"

Input: "pwwkew"
Output: "wke"

function longestUniqueSubstring(s) {
    let longest = "";

    for (let i = 0; i < s.length; i++) {
        let current = "";

        for (let j = i; j < s.length; j++) {
            if (current.includes(s[j])) {
                break;
            }
            current += s[j];
        }

        if (current.length > longest.length) {
            longest = current;
        }
    }

    return longest;
}

// Take input from user using prompt
let inputString = prompt("Enter a string:");
let result = longestUniqueSubstring(inputString);
console.log("Longest unique substring is:", result);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4.Best Time to Buy and Sell Stock (Easy) - LeetCode #121

5.Product of Array Except Self (Medium) - LeetCode #238

let nums = prompt("Enter the array of numbers:");
let arr = nums.replace('[','').replace(']','').split(",").map(Number);

let result = [];

for (let i = 0; i < arr.length; i++) {
    let product = 1;
    for (let j = 0; j < arr.length; j++) {
        if (i !== j) {
            product *= arr[j];
        }
    }
    result.push(product);
}

console.log("Answer:", result);

------------------------------------------------------------------------------------------------------------------------------------




6.Longest Substring Without Repeating Characters (Medium) - LeetCode #3

--------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------

Linked Lists
-----------------
Reverse Linked List (Easy) - LeetCode #206

Merge Two Sorted Lists (Easy) - LeetCode #21

Linked List Cycle (Easy) - LeetCode #141

Remove Nth Node From End of List (Medium) - LeetCode #19
---------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

Trees & Graphs
-------------------

Maximum Depth of Binary Tree (Easy) - LeetCode #104

Validate Binary Search Tree (Medium) - LeetCode #98

Number of Islands (Medium) - LeetCode #200

Lowest Common Ancestor of a Binary Search Tree (Medium) - LeetCode #235
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
Dynamic Programming
-----------------------
Climbing Stairs (Easy) - LeetCode #70

Coin Change (Medium) - LeetCode #322

Longest Increasing Subsequence (Medium) - LeetCode #300

House Robber (Medium) - LeetCode #198
-------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
Backtracking
--------------
Subsets (Medium) - LeetCode #78

Combination Sum (Medium) - LeetCode #39

Permutations (Medium) - LeetCode #46

Word Search (Medium) - LeetCode #79
---------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
Sorting & Searching
------------------------
Merge Intervals (Medium) - LeetCode #56

Search in Rotated Sorted Array (Medium) - LeetCode #33


Kth Largest Element in an Array (Medium) - LeetCode #215






